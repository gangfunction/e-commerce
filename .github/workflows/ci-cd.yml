name: CI/CD Pipeline

on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Run tests
        run: ./gradlew test

      - name: Run lint
        run: ./gradlew lint

      - name: Generate test report
        run: ./gradlew jacocoTestReport

      - name: Archive test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: build/reports/tests

      - name: Archive coverage results
        uses: actions/upload-artifact@v3
        with:
          name: coverage-results
          path: build/reports/jacoco

      - name: Archive lint results
        uses: actions/upload-artifact@v3
        with:
          name: lint-results
          path: build/reports/lint-results-debug.html

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Build with Gradle
        run: ./gradlew build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/ecommerce-app:${{ github.ref == 'refs/heads/main' && 'production' || 'develop' }}-${{ github.sha }}

  deploy-dev:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Deploy to Dev server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USER }}
          key: ${{ secrets.DEV_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/ecommerce-app:develop-${{ github.sha }}
            docker stop ecommerce-app-dev || true
            docker rm ecommerce-app-dev || true
            docker run -d --name ecommerce-app-dev -p 8080:8080 ${{ secrets.DOCKER_HUB_USERNAME }}/ecommerce-app:develop-${{ github.sha }}

  deploy-prod:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to Prod server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/ecommerce-app:production-${{ github.sha }}
            docker stop ecommerce-app-prod || true
            docker rm ecommerce-app-prod || true
            docker run -d --name ecommerce-app-prod -p 80:8080 ${{ secrets.DOCKER_HUB_USERNAME }}/ecommerce-app:production-${{ github.sha }}